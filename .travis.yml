os: linux
dist: xenial
language: java
jdk: openjdk11

addons:
  firefox: "76.0.1"

git:
  depth: false
  quiet: true

services:
  - xvfb
  - docker

import:
  - Alfresco/alfresco-process-tools:.travis.kubernetes_install.yml@master
  - Alfresco/alfresco-process-tools:.travis.helm_install.yml@master

cache:
  directories:
    - $HOME/.m2
# the cache can grow constantly
before_cache:
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-share*

branches:
  only:
    - master
    - develop
    - /^SP\/.+$/
    - /.*\/APPS-.*$/

env:
  global:
    - REPO_TAG_NAME=7.0.0-M1
    - SHARE_TAG_NAME=latest
    # Release version has to start with real version (7.0.0-....) for the docker image to build successfully.
    - RELEASE_VERSION=7.0.0-M2
    - DEVELOPMENT_VERSION=7.0.0-SNAPSHOT
    - HOSTED_ZONE=dev.alfresco.me
    - KEEP_ENV=false
    - NAMESPACE="travis-share-${TRAVIS_BUILD_ID}"
    - HOST="${NAMESPACE}.${HOSTED_ZONE}"

stages:
  - build
  - deploy
  - wait
  - tests
  - tearDown
  - release
  - company_release

before_install:
  - |
    pip install --upgrade awscli
    curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator
    curl -o aws-iam-authenticator.sha256 https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator.sha256
    openssl sha1 -sha256 aws-iam-authenticator
    chmod +x ./aws-iam-authenticator
    mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
    export PATH=$PATH:$HOME/bin
    aws eks update-kubeconfig --name appsTeam --region=eu-west-1

jobs:
  include:
#    - name: "Build and Test"
#      stage: build
#      before_install: bash _ci/init.sh
#      script: bash _ci/build.sh

#    - name: "White Source"
#      stage: build
#      # only on SP branches or master and if it is not a PR
#      if: fork = false AND (branch = develop OR branch =~ /support\/SP\/.*/ OR branch =~ /.*\/APPS-.*$/) AND type != pull_request
#      before_install: bash _ci/init.sh
#      script: travis_wait 30 bash _ci/whitesource.sh _ci/.wss-unified-agent.config
#
#    - name: "Source Clear Scan (SCA)"
#      stage: build
#      # only on SP branches or master and if it is not a PR
#      if: fork = false AND (branch = develop OR branch =~ /support\/SP\/.*/ OR branch =~ /.*\/APPS-.*$/) AND type != pull_request
#      before_install: bash _ci/init.sh
#      # Run Veracode
#      install: skip
#      script: travis_wait 30 bash _ci/source_clear.sh

    - name: "Deploy on K8s"
      stage: deploy
      install: skip
      script: bash _ci/deploy_k8s.sh

    - name: "Wait for pods"
      stage: wait
      install: skip
      script: bash _ci/wait_for_pods.sh

#    - &test-staging
#      stage: tests
#      jdk: openjdk11
#      if: fork=false AND commit_message !~ /\[trigger company release\]/
#      before_install: bash _ci/init.sh
#      script:
#        - bash _ci/execute_share_web.sh "auth"
#      addons:
#        artifacts:
#            paths:
#              - alfresco-tas-share-test/target/surefire-reports
#              - alfresco-tas-share-test/target/reports
#            target_paths: $TRAVIS_BUILD_NUMBER
#
#    - <<: *test-staging
#      script: bash _ci/execute_share_web.sh "admin-tools"
#
#    - <<: *test-staging
#      script: bash _ci/execute_share_web.sh "AlfrescoConsoles"
#
#    - <<: *test-staging
#      script: bash _ci/execute_share_web.sh "user"

    - name: "Delete environment"
      stage: tearDown
      install: skip
      script: bash _ci/delete-env.sh

#    - name: "Release"
#      stage: release
#      if: fork=false AND commit_message =~ /\[release\]/ AND branch =~ /^(master|SP\/.+|HF\/.+)$/
#      before_install: bash _ci/init.sh
#      script: travis_wait 30 _ci/maven_release.sh
#
#    - name: "Company Release"
#      stage: company_release
#      if: fork=false AND commit_message =~ /\[trigger company release\]/ AND branch =~ /^(master|SP\/.+|HF\/.+)$/
#      before_install: bash _ci/init.sh
#      script: travis_wait 30 _ci/company-release.sh
